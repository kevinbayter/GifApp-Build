{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","setImages","useEffect","then","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,UAAU,QAAQC,SATL,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,OACxCP,EAAc,MAKhB,SACE,uBACEQ,KAAK,OACLC,MAAOV,EACPW,SAhBoB,SAACP,GACzBH,EAAcG,EAAEQ,OAAOF,a,QCJdG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAClC,OACE,sBAAKb,UAAU,OAAf,UACM,qBAAKc,IAAKD,EAAKE,IAAKH,IAClB,4BAAIA,Q,uBCNHI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,kDACkCM,UACrDF,GAFmB,8DAIFG,MAAMP,GAJJ,cAIfQ,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAVjB,kBAafW,GAbe,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACxB,EAA4BpB,mBAAS,IAArC,mBAAO+B,EAAP,KAAeG,EAAf,KAKA,OAJAC,qBAAU,WACRhB,EAAQC,GAAUgB,KAAKF,KACtB,CAAEd,IAGH,qCACE,6BAAKA,IACL,qBAAKjB,UAAU,YAAf,SACG4B,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCXnBO,EAAe,WAC1B,MAAoCrC,mBAAS,CAC3C,eADF,mBAAOsC,EAAP,KAAmBvC,EAAnB,KAIA,OACE,qCACE,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGuC,EAAWV,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVxBmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.70b9470e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats,]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form className=\"input\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({title, url}) => {\n  return (\n    <div className=\"card\">\n          <img src={url} alt={title} />\n            <p>{title}</p>\n    </div>\n  );\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?&q=${encodeURI(\n    category\n  )}&limit=9&api_key=28KIyCXLOavfqWljpTwnA9x9ZCDZ9rVz`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n return gifs;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const GifGrid = ({ category }) => {\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    getGifs(category).then(setImages);\n  }, [ category ]);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\n    \"Death Note\"\n  ]);\n\n  return (\n    <>\n      <h2>GifApp By Bayter</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}